# travis build configuration for ZeroPilot-SW

language: cpp
sudo: true


matrix:
  include:

    - os: linux
      compiler: gcc
      env: CXX_FLAGS="-std=c++11" TARGET=Autopilot
      addons:
        apt:
          packages:
          - ninja-build
          - cmake
      cache:
        directories:
          - $HOME/gcc-arm-none-eabi-7-2017-q4-major
          - /usr/include/gtest
      before_install:
        - if [ ! -e /usr/include/gtest ]; then sudo apt-get install libgtest-dev; cd /usr/src/gtest; sudo cmake CMakeLists.txt; sudo make; sudo cp *.a /usr/lib; cd $TRAVIS_BUILD_DIR; fi
      install:
        - export GCC_DIR=$HOME/gcc-arm-none-eabi-7-2017-q4-major
        - export GCC_ARCHIVE=$HOME/gcc-arm-none-eabi-7-2017-q4-major-linux.tar.bz2
        - export GCC_URL=https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2017q4/gcc-arm-none-eabi-7-2017-q4-major-linux.tar.bz2
        - if [ ! -e $GCC_DIR/bin/arm-none-eabi-g++ ]; then wget $GCC_URL -O $GCC_ARCHIVE; tar xfj $GCC_ARCHIVE -C $HOME; fi
        - export PATH=$GCC_DIR/bin:$PATH

    - os: linux
      compiler: gcc
      env: CXX_FLAGS="-std=c++11" TARGET=Safety
      addons:
        apt:
          packages:
          - ninja-build
          - cmake
      cache:
        directories:
          - $HOME/gcc-arm-none-eabi-7-2017-q4-major
      install:
        - export GCC_DIR=$HOME/gcc-arm-none-eabi-7-2017-q4-major
        - export GCC_ARCHIVE=$HOME/gcc-arm-none-eabi-7-2017-q4-major-linux.tar.bz2
        - export GCC_URL=https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2017q4/gcc-arm-none-eabi-7-2017-q4-major-linux.tar.bz2
        - if [ ! -e $GCC_DIR/bin/arm-none-eabi-g++ ]; then wget $GCC_URL -O $GCC_ARCHIVE; tar xfj $GCC_ARCHIVE -C $HOME; fi
        - export PATH=$GCC_DIR/bin:$PATH

    - os: osx
      compiler: clang
      env: CXX_FLAGS="-std=c++11" TARGET=Autopilot
      cache:
        directories:
          - $HOME/gcc-arm-none-eabi-7-2017-q4-major
          - /usr/local/lib/gtest
      before_install: #TODO cache this shit please
        - curl -LO https://github.com/google/googletest/archive/release-1.10.0.tar.gz; tar xf release-1.10.0.tar.gz; cd googletest-release-1.10.0; mkdir build; cd build; cmake ..; make; make install;
      install:
        - export GCC_DIR=$HOME/gcc-arm-none-eabi-7-2017-q4-major
        - export GCC_ARCHIVE=$HOME/gcc-arm-none-eabi-7-2017-q4-major-linux.tar.bz2
        - export GCC_URL=https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2017q4/gcc-arm-none-eabi-7-2017-q4-major-mac.tar.bz2
        - if [ ! -e $GCC_DIR/bin/arm-none-eabi-g++ ]; then wget $GCC_URL -O $GCC_ARCHIVE; tar xfj $GCC_ARCHIVE -C $HOME; fi
        - export PATH=$GCC_DIR/bin:$PATH


    - os: osx
      compiler: clang
      env: CXX_FLAGS="-std=c++11" TARGET=Safety
      cache:
        directories:
          - $HOME/gcc-arm-none-eabi-7-2017-q4-major
      install:
        - export GCC_DIR=$HOME/gcc-arm-none-eabi-7-2017-q4-major
        - export GCC_ARCHIVE=$HOME/gcc-arm-none-eabi-7-2017-q4-major-linux.tar.bz2
        - export GCC_URL=https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2017q4/gcc-arm-none-eabi-7-2017-q4-major-mac.tar.bz2
        - wget $GCC_URL -O $GCC_ARCHIVE
        - tar xfj $GCC_ARCHIVE -C $HOME
        - export PATH=$GCC_DIR/bin:$PATH



script:
  - cd $TRAVIS_BUILD_DIR/$TARGET
  - ./Tools/build.bash -c
  - if [ $TARGET = Autopilot ]; then ./Tools/build.bash -c -T; fi
